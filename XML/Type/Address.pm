
#PASTOR: Code generated by XML::Pastor/1.0.3 at 'Thu Mar  8 15:06:49 2012'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package Edge::B2B::XML::Type::Address;

use Edge::B2B::XML::Type::Address_Country;
use Edge::B2B::XML::Type::AttributesExtended;

our @ISA=qw(XML::Pastor::ComplexType);

Edge::B2B::XML::Type::Address->mk_accessors( qw(LocationName Attn Address1 Address2 Address3 ResidentialAddress City State PostalCode Country PhoneNumber AttributesExtended));

Edge::B2B::XML::Type::Address->XmlSchemaType( bless( {
                 'attributeInfo' => {},
                 'attributePrefix' => '_',
                 'attributes' => [],
                 'baseClasses' => [
                                    'XML::Pastor::ComplexType'
                                  ],
                 'class' => 'Edge::B2B::XML::Type::Address',
                 'contentType' => 'complex',
                 'documentation' => bless( [
                                             bless( {
                                                      'text' => 'Base type for physical street address.'
                                                    }, 'XML::Pastor::Schema::Documentation' )
                                           ], 'Data::HashArray' ),
                 'elementInfo' => {
                                  'Address1' => bless( {
                                                       'class' => 'XML::Pastor::Builtin::token',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'First address line.'
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                       'name' => 'Address1',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                       'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                     }, 'XML::Pastor::Schema::Element' ),
                                  'Address2' => bless( {
                                                       'class' => 'XML::Pastor::Builtin::token',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'Second address line (optional).'
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                       'minOccurs' => '0',
                                                       'name' => 'Address2',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                       'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                     }, 'XML::Pastor::Schema::Element' ),
                                  'Address3' => bless( {
                                                       'class' => 'XML::Pastor::Builtin::token',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'Third address line (optional).'
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                       'minOccurs' => '0',
                                                       'name' => 'Address3',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                       'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                     }, 'XML::Pastor::Schema::Element' ),
                                  'Attn' => bless( {
                                                   'class' => 'XML::Pastor::Builtin::token',
                                                   'documentation' => bless( [
                                                                               bless( {
                                                                                        'text' => 'Attention of individual or department (optional).'
                                                                                      }, 'XML::Pastor::Schema::Documentation' )
                                                                             ], 'Data::HashArray' ),
                                                   'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                   'minOccurs' => '0',
                                                   'name' => 'Attn',
                                                   'scope' => 'local',
                                                   'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                   'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                 }, 'XML::Pastor::Schema::Element' ),
                                  'AttributesExtended' => bless( {
                                                                 'class' => 'Edge::B2B::XML::Type::AttributesExtended',
                                                                 'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                                 'minOccurs' => '0',
                                                                 'name' => 'AttributesExtended',
                                                                 'scope' => 'local',
                                                                 'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                                 'type' => 'AttributesExtended|http://ws.outdoorindustry.org/v2'
                                                               }, 'XML::Pastor::Schema::Element' ),
                                  'City' => bless( {
                                                   'class' => 'XML::Pastor::Builtin::token',
                                                   'documentation' => bless( [
                                                                               bless( {
                                                                                        'text' => 'Name of city, town, or equivalent for this address.'
                                                                                      }, 'XML::Pastor::Schema::Documentation' )
                                                                             ], 'Data::HashArray' ),
                                                   'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                   'name' => 'City',
                                                   'scope' => 'local',
                                                   'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                   'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                 }, 'XML::Pastor::Schema::Element' ),
                                  'Country' => bless( {
                                                      'class' => 'Edge::B2B::XML::Type::Address_Country',
                                                      'documentation' => bless( [
                                                                                  bless( {
                                                                                           'text' => 'ISO 3166 three-letter country code (optional). Assumed to be \'USA\' if empty or omitted.'
                                                                                         }, 'XML::Pastor::Schema::Documentation' )
                                                                                ], 'Data::HashArray' ),
                                                      'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                      'minOccurs' => '0',
                                                      'name' => 'Country',
                                                      'scope' => 'local',
                                                      'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                      'type' => 'Address_Country|http://ws.outdoorindustry.org/v2'
                                                    }, 'XML::Pastor::Schema::Element' ),
                                  'LocationName' => bless( {
                                                           'class' => 'XML::Pastor::Builtin::token',
                                                           'documentation' => bless( [
                                                                                       bless( {
                                                                                                'text' => 'Addressee name (optional). Often the name of a company or individual.'
                                                                                              }, 'XML::Pastor::Schema::Documentation' )
                                                                                     ], 'Data::HashArray' ),
                                                           'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                           'minOccurs' => '0',
                                                           'name' => 'LocationName',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                           'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                         }, 'XML::Pastor::Schema::Element' ),
                                  'PhoneNumber' => bless( {
                                                          'class' => 'XML::Pastor::Builtin::token',
                                                          'documentation' => bless( [
                                                                                      bless( {
                                                                                               'text' => 'Phone number associated with address (optional).'
                                                                                             }, 'XML::Pastor::Schema::Documentation' )
                                                                                    ], 'Data::HashArray' ),
                                                          'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                          'minOccurs' => '0',
                                                          'name' => 'PhoneNumber',
                                                          'scope' => 'local',
                                                          'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                          'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                        }, 'XML::Pastor::Schema::Element' ),
                                  'PostalCode' => bless( {
                                                         'class' => 'XML::Pastor::Builtin::token',
                                                         'documentation' => bless( [
                                                                                     bless( {
                                                                                              'text' => 'ZIP or Postal code.'
                                                                                            }, 'XML::Pastor::Schema::Documentation' )
                                                                                   ], 'Data::HashArray' ),
                                                         'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                         'name' => 'PostalCode',
                                                         'scope' => 'local',
                                                         'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                         'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                       }, 'XML::Pastor::Schema::Element' ),
                                  'ResidentialAddress' => bless( {
                                                                 'class' => 'XML::Pastor::Builtin::boolean',
                                                                 'documentation' => bless( [
                                                                                             bless( {
                                                                                                      'text' => 'Optional. Indicates whether the address is residential or not. Note: If absent on a PO, it will be interpreted according to context; \'true\' if POType is \'Dropship\', \'false\' if POType is \'Standalone\', \'Forecast\', or \'Preseason\'. For any other POType it will be interpreted according to initial PO.'
                                                                                                    }, 'XML::Pastor::Schema::Documentation' )
                                                                                           ], 'Data::HashArray' ),
                                                                 'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                                 'minOccurs' => '0',
                                                                 'name' => 'ResidentialAddress',
                                                                 'scope' => 'local',
                                                                 'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                                 'type' => 'boolean|http://www.w3.org/2001/XMLSchema'
                                                               }, 'XML::Pastor::Schema::Element' ),
                                  'State' => bless( {
                                                    'class' => 'XML::Pastor::Builtin::token',
                                                    'documentation' => bless( [
                                                                                bless( {
                                                                                         'text' => 'Standardized code or abbreviation of the state or province name for this address. For U.S. states, use the 2 letter state code, i.e. \'CO\' for Colorado. Note: Certain countries do not normally include the name, code, or abbreviation of the state or province with the address. In such cases, leave this element blank.'
                                                                                       }, 'XML::Pastor::Schema::Documentation' )
                                                                              ], 'Data::HashArray' ),
                                                    'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                    'name' => 'State',
                                                    'scope' => 'local',
                                                    'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                    'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                  }, 'XML::Pastor::Schema::Element' )
                                },
                 'elements' => [
                                 'LocationName',
                                 'Attn',
                                 'Address1',
                                 'Address2',
                                 'Address3',
                                 'ResidentialAddress',
                                 'City',
                                 'State',
                                 'PostalCode',
                                 'Country',
                                 'PhoneNumber',
                                 'AttributesExtended'
                               ],
                 'isRedefinable' => 1,
                 'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                 'name' => 'Address',
                 'scope' => 'global',
                 'targetNamespace' => 'http://ws.outdoorindustry.org/v2'
               }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<Edge::B2B::XML::Type::Address>  -  A class generated by L<XML::Pastor> . 


=head1 DESCRIPTION

Base type for physical street address.


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.3 at 'Thu Mar  8 15:06:49 2012'


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<Address1>()      - See L<XML::Pastor::Builtin::token>.

=item B<Address2>()      - See L<XML::Pastor::Builtin::token>.

=item B<Address3>()      - See L<XML::Pastor::Builtin::token>.

=item B<Attn>()      - See L<XML::Pastor::Builtin::token>.

=item B<AttributesExtended>()      - See L<Edge::B2B::XML::Type::AttributesExtended>.

=item B<City>()      - See L<XML::Pastor::Builtin::token>.

=item B<Country>()      - See L<Edge::B2B::XML::Type::Address_Country>.

=item B<LocationName>()      - See L<XML::Pastor::Builtin::token>.

=item B<PhoneNumber>()      - See L<XML::Pastor::Builtin::token>.

=item B<PostalCode>()      - See L<XML::Pastor::Builtin::token>.

=item B<ResidentialAddress>()      - See L<XML::Pastor::Builtin::boolean>.

=item B<State>()      - See L<XML::Pastor::Builtin::token>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
