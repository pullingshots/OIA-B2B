
#PASTOR: Code generated by XML::Pastor/1.0.3 at 'Thu Mar  8 15:06:49 2012'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package Edge::B2B::XML::Type::Invoice;

use Edge::B2B::XML::Type::Address;
use Edge::B2B::XML::Type::AttributesExtended;
use Edge::B2B::XML::Type::Invoice_Buyer;
use Edge::B2B::XML::Type::Invoice_Products;
use Edge::B2B::XML::Type::Invoice_Taxes;
use Edge::B2B::XML::Type::MonetaryAmount;
use Edge::B2B::XML::Type::OIAHeader;
use Edge::B2B::XML::Type::Weight;

our @ISA=qw(XML::Pastor::ComplexType);

Edge::B2B::XML::Type::Invoice->mk_accessors( qw(Header InvoiceNumber PONumber TrackingNumber PODate ShipDate InvoiceDate DueDays DueDate TotalLineItems TotalQuantity TotalWeight InvoiceTotal Taxes PaidTotal OutstandingTotal Buyer ShipTo VendorShipToID BillTo VendorBillToID RemitTo InvoiceNote Products AttributesExtended));

Edge::B2B::XML::Type::Invoice->XmlSchemaType( bless( {
                 'attributeInfo' => {},
                 'attributePrefix' => '_',
                 'attributes' => [],
                 'baseClasses' => [
                                    'XML::Pastor::ComplexType'
                                  ],
                 'class' => 'Edge::B2B::XML::Type::Invoice',
                 'contentType' => 'complex',
                 'documentation' => bless( [
                                             bless( {
                                                      'text' => 'Invoice document'
                                                    }, 'XML::Pastor::Schema::Documentation' )
                                           ], 'Data::HashArray' ),
                 'elementInfo' => {
                                  'AttributesExtended' => bless( {
                                                                 'class' => 'Edge::B2B::XML::Type::AttributesExtended',
                                                                 'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                                 'minOccurs' => '0',
                                                                 'name' => 'AttributesExtended',
                                                                 'scope' => 'local',
                                                                 'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                                 'type' => 'AttributesExtended|http://ws.outdoorindustry.org/v2'
                                                               }, 'XML::Pastor::Schema::Element' ),
                                  'BillTo' => bless( {
                                                     'class' => 'Edge::B2B::XML::Type::Address',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'The billing address that the invoice for this PO should be mailed to. '
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                     'name' => 'BillTo',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                     'type' => 'Address|http://ws.outdoorindustry.org/v2'
                                                   }, 'XML::Pastor::Schema::Element' ),
                                  'Buyer' => bless( {
                                                    'class' => 'Edge::B2B::XML::Type::Invoice_Buyer',
                                                    'documentation' => bless( [
                                                                                bless( {
                                                                                         'text' => 'The buyer responsible for this purchase order. '
                                                                                       }, 'XML::Pastor::Schema::Documentation' )
                                                                              ], 'Data::HashArray' ),
                                                    'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                    'name' => 'Buyer',
                                                    'scope' => 'local',
                                                    'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                    'type' => 'Invoice_Buyer|http://ws.outdoorindustry.org/v2'
                                                  }, 'XML::Pastor::Schema::Element' ),
                                  'DueDate' => bless( {
                                                      'class' => 'XML::Pastor::Builtin::date',
                                                      'documentation' => bless( [
                                                                                  bless( {
                                                                                           'text' => 'Date that payment is due'
                                                                                         }, 'XML::Pastor::Schema::Documentation' )
                                                                                ], 'Data::HashArray' ),
                                                      'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                      'name' => 'DueDate',
                                                      'scope' => 'local',
                                                      'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                      'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                    }, 'XML::Pastor::Schema::Element' ),
                                  'DueDays' => bless( {
                                                      'class' => 'XML::Pastor::Builtin::integer',
                                                      'documentation' => bless( [
                                                                                  bless( {
                                                                                           'text' => 'Number of days from the invoice date that the invoice is due.'
                                                                                         }, 'XML::Pastor::Schema::Documentation' )
                                                                                ], 'Data::HashArray' ),
                                                      'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                      'name' => 'DueDays',
                                                      'scope' => 'local',
                                                      'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                      'type' => 'integer|http://www.w3.org/2001/XMLSchema'
                                                    }, 'XML::Pastor::Schema::Element' ),
                                  'Header' => bless( {
                                                     'class' => 'Edge::B2B::XML::Type::OIAHeader',
                                                     'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                     'name' => 'Header',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                     'type' => 'OIAHeader|http://ws.outdoorindustry.org/v2'
                                                   }, 'XML::Pastor::Schema::Element' ),
                                  'InvoiceDate' => bless( {
                                                          'class' => 'XML::Pastor::Builtin::date',
                                                          'documentation' => bless( [
                                                                                      bless( {
                                                                                               'text' => 'Date of the Invoice'
                                                                                             }, 'XML::Pastor::Schema::Documentation' )
                                                                                    ], 'Data::HashArray' ),
                                                          'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                          'name' => 'InvoiceDate',
                                                          'scope' => 'local',
                                                          'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                          'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                        }, 'XML::Pastor::Schema::Element' ),
                                  'InvoiceNote' => bless( {
                                                          'class' => 'XML::Pastor::Builtin::token',
                                                          'documentation' => bless( [
                                                                                      bless( {
                                                                                               'text' => 'Free form notes about the invoice.  If included, they should be read by the vendor.'
                                                                                             }, 'XML::Pastor::Schema::Documentation' )
                                                                                    ], 'Data::HashArray' ),
                                                          'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                          'minOccurs' => '0',
                                                          'name' => 'InvoiceNote',
                                                          'scope' => 'local',
                                                          'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                          'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                        }, 'XML::Pastor::Schema::Element' ),
                                  'InvoiceNumber' => bless( {
                                                            'class' => 'XML::Pastor::Builtin::token',
                                                            'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                            'name' => 'InvoiceNumber',
                                                            'scope' => 'local',
                                                            'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                            'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                          }, 'XML::Pastor::Schema::Element' ),
                                  'InvoiceTotal' => bless( {
                                                           'class' => 'Edge::B2B::XML::Type::MonetaryAmount',
                                                           'documentation' => bless( [
                                                                                       bless( {
                                                                                                'text' => 'The total monetary value represented by this Invoice.'
                                                                                              }, 'XML::Pastor::Schema::Documentation' )
                                                                                     ], 'Data::HashArray' ),
                                                           'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                           'name' => 'InvoiceTotal',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                           'type' => 'MonetaryAmount|http://ws.outdoorindustry.org/v2'
                                                         }, 'XML::Pastor::Schema::Element' ),
                                  'OutstandingTotal' => bless( {
                                                               'class' => 'Edge::B2B::XML::Type::MonetaryAmount',
                                                               'documentation' => bless( [
                                                                                           bless( {
                                                                                                    'text' => 'The total amount outstanding.'
                                                                                                  }, 'XML::Pastor::Schema::Documentation' )
                                                                                         ], 'Data::HashArray' ),
                                                               'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                               'name' => 'OutstandingTotal',
                                                               'scope' => 'local',
                                                               'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                               'type' => 'MonetaryAmount|http://ws.outdoorindustry.org/v2'
                                                             }, 'XML::Pastor::Schema::Element' ),
                                  'PODate' => bless( {
                                                     'class' => 'XML::Pastor::Builtin::date',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'Date the PO was submitted'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                     'name' => 'PODate',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                     'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                   }, 'XML::Pastor::Schema::Element' ),
                                  'PONumber' => bless( {
                                                       'class' => 'XML::Pastor::Builtin::token',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'PONumber is an identifier that the retailer assigns to the PO.  Often, this identifier will be referenced in verbal or written communication between the retailer and vendor.  The PONumber needs to be unique in the interactions for one vendor/retailer partnership.  '
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                       'name' => 'PONumber',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                       'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                     }, 'XML::Pastor::Schema::Element' ),
                                  'PaidTotal' => bless( {
                                                        'class' => 'Edge::B2B::XML::Type::MonetaryAmount',
                                                        'documentation' => bless( [
                                                                                    bless( {
                                                                                             'text' => 'The total amount paid.'
                                                                                           }, 'XML::Pastor::Schema::Documentation' )
                                                                                  ], 'Data::HashArray' ),
                                                        'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                        'name' => 'PaidTotal',
                                                        'scope' => 'local',
                                                        'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                        'type' => 'MonetaryAmount|http://ws.outdoorindustry.org/v2'
                                                      }, 'XML::Pastor::Schema::Element' ),
                                  'Products' => bless( {
                                                       'class' => 'Edge::B2B::XML::Type::Invoice_Products',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'Product section of the PO'
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                       'name' => 'Products',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                       'type' => 'Invoice_Products|http://ws.outdoorindustry.org/v2'
                                                     }, 'XML::Pastor::Schema::Element' ),
                                  'RemitTo' => bless( {
                                                      'class' => 'Edge::B2B::XML::Type::Address',
                                                      'documentation' => bless( [
                                                                                  bless( {
                                                                                           'text' => 'The address where payment should be sent. '
                                                                                         }, 'XML::Pastor::Schema::Documentation' )
                                                                                ], 'Data::HashArray' ),
                                                      'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                      'name' => 'RemitTo',
                                                      'scope' => 'local',
                                                      'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                      'type' => 'Address|http://ws.outdoorindustry.org/v2'
                                                    }, 'XML::Pastor::Schema::Element' ),
                                  'ShipDate' => bless( {
                                                       'class' => 'XML::Pastor::Builtin::date',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'Date the items were shipped'
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                       'name' => 'ShipDate',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                       'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                     }, 'XML::Pastor::Schema::Element' ),
                                  'ShipTo' => bless( {
                                                     'class' => 'Edge::B2B::XML::Type::Address',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'The ship to address for the items on this PO'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                     'name' => 'ShipTo',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                     'type' => 'Address|http://ws.outdoorindustry.org/v2'
                                                   }, 'XML::Pastor::Schema::Element' ),
                                  'Taxes' => bless( {
                                                    'class' => 'Edge::B2B::XML::Type::Invoice_Taxes',
                                                    'documentation' => bless( [
                                                                                bless( {
                                                                                         'text' => 'Tax amounts included in the InvoiceTotal.'
                                                                                       }, 'XML::Pastor::Schema::Documentation' )
                                                                              ], 'Data::HashArray' ),
                                                    'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                    'name' => 'Taxes',
                                                    'scope' => 'local',
                                                    'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                    'type' => 'Invoice_Taxes|http://ws.outdoorindustry.org/v2'
                                                  }, 'XML::Pastor::Schema::Element' ),
                                  'TotalLineItems' => bless( {
                                                             'class' => 'XML::Pastor::Builtin::integer',
                                                             'documentation' => bless( [
                                                                                         bless( {
                                                                                                  'text' => 'Number of line items included in the Invoice. '
                                                                                                }, 'XML::Pastor::Schema::Documentation' )
                                                                                       ], 'Data::HashArray' ),
                                                             'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                             'name' => 'TotalLineItems',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                             'type' => 'integer|http://www.w3.org/2001/XMLSchema'
                                                           }, 'XML::Pastor::Schema::Element' ),
                                  'TotalQuantity' => bless( {
                                                            'class' => 'XML::Pastor::Builtin::integer',
                                                            'documentation' => bless( [
                                                                                        bless( {
                                                                                                 'text' => 'The total number of items that are being invoiced.'
                                                                                               }, 'XML::Pastor::Schema::Documentation' )
                                                                                      ], 'Data::HashArray' ),
                                                            'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                            'name' => 'TotalQuantity',
                                                            'scope' => 'local',
                                                            'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                            'type' => 'integer|http://www.w3.org/2001/XMLSchema'
                                                          }, 'XML::Pastor::Schema::Element' ),
                                  'TotalWeight' => bless( {
                                                          'class' => 'Edge::B2B::XML::Type::Weight',
                                                          'documentation' => bless( [
                                                                                      bless( {
                                                                                               'text' => 'The total weight of the items that are being invoiced.'
                                                                                             }, 'XML::Pastor::Schema::Documentation' )
                                                                                    ], 'Data::HashArray' ),
                                                          'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                          'name' => 'TotalWeight',
                                                          'scope' => 'local',
                                                          'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                          'type' => 'Weight|http://ws.outdoorindustry.org/v2'
                                                        }, 'XML::Pastor::Schema::Element' ),
                                  'TrackingNumber' => bless( {
                                                             'class' => 'XML::Pastor::Builtin::token',
                                                             'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                             'name' => 'TrackingNumber',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                             'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                           }, 'XML::Pastor::Schema::Element' ),
                                  'VendorBillToID' => bless( {
                                                             'class' => 'XML::Pastor::Builtin::token',
                                                             'documentation' => bless( [
                                                                                         bless( {
                                                                                                  'text' => 'Optional. The vendor system will sometimes have a billing address identifier for the retailers locations.  '
                                                                                                }, 'XML::Pastor::Schema::Documentation' )
                                                                                       ], 'Data::HashArray' ),
                                                             'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'VendorBillToID',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                             'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                           }, 'XML::Pastor::Schema::Element' ),
                                  'VendorShipToID' => bless( {
                                                             'class' => 'XML::Pastor::Builtin::token',
                                                             'documentation' => bless( [
                                                                                         bless( {
                                                                                                  'text' => 'Optional. The vendor system will sometimes have a shipping address identifier for the retailers locations.  '
                                                                                                }, 'XML::Pastor::Schema::Documentation' )
                                                                                       ], 'Data::HashArray' ),
                                                             'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'VendorShipToID',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                             'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                           }, 'XML::Pastor::Schema::Element' )
                                },
                 'elements' => [
                                 'Header',
                                 'InvoiceNumber',
                                 'PONumber',
                                 'TrackingNumber',
                                 'PODate',
                                 'ShipDate',
                                 'InvoiceDate',
                                 'DueDays',
                                 'DueDate',
                                 'TotalLineItems',
                                 'TotalQuantity',
                                 'TotalWeight',
                                 'InvoiceTotal',
                                 'Taxes',
                                 'PaidTotal',
                                 'OutstandingTotal',
                                 'Buyer',
                                 'ShipTo',
                                 'VendorShipToID',
                                 'BillTo',
                                 'VendorBillToID',
                                 'RemitTo',
                                 'InvoiceNote',
                                 'Products',
                                 'AttributesExtended'
                               ],
                 'isRedefinable' => 1,
                 'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                 'name' => 'Invoice',
                 'scope' => 'global',
                 'targetNamespace' => 'http://ws.outdoorindustry.org/v2'
               }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<Edge::B2B::XML::Type::Invoice>  -  A class generated by L<XML::Pastor> . 


=head1 DESCRIPTION

Invoice document


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.3 at 'Thu Mar  8 15:06:49 2012'


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<AttributesExtended>()      - See L<Edge::B2B::XML::Type::AttributesExtended>.

=item B<BillTo>()      - See L<Edge::B2B::XML::Type::Address>.

=item B<Buyer>()      - See L<Edge::B2B::XML::Type::Invoice_Buyer>.

=item B<DueDate>()      - See L<XML::Pastor::Builtin::date>.

=item B<DueDays>()      - See L<XML::Pastor::Builtin::integer>.

=item B<Header>()      - See L<Edge::B2B::XML::Type::OIAHeader>.

=item B<InvoiceDate>()      - See L<XML::Pastor::Builtin::date>.

=item B<InvoiceNote>()      - See L<XML::Pastor::Builtin::token>.

=item B<InvoiceNumber>()      - See L<XML::Pastor::Builtin::token>.

=item B<InvoiceTotal>()      - See L<Edge::B2B::XML::Type::MonetaryAmount>.

=item B<OutstandingTotal>()      - See L<Edge::B2B::XML::Type::MonetaryAmount>.

=item B<PODate>()      - See L<XML::Pastor::Builtin::date>.

=item B<PONumber>()      - See L<XML::Pastor::Builtin::token>.

=item B<PaidTotal>()      - See L<Edge::B2B::XML::Type::MonetaryAmount>.

=item B<Products>()      - See L<Edge::B2B::XML::Type::Invoice_Products>.

=item B<RemitTo>()      - See L<Edge::B2B::XML::Type::Address>.

=item B<ShipDate>()      - See L<XML::Pastor::Builtin::date>.

=item B<ShipTo>()      - See L<Edge::B2B::XML::Type::Address>.

=item B<Taxes>()      - See L<Edge::B2B::XML::Type::Invoice_Taxes>.

=item B<TotalLineItems>()      - See L<XML::Pastor::Builtin::integer>.

=item B<TotalQuantity>()      - See L<XML::Pastor::Builtin::integer>.

=item B<TotalWeight>()      - See L<Edge::B2B::XML::Type::Weight>.

=item B<TrackingNumber>()      - See L<XML::Pastor::Builtin::token>.

=item B<VendorBillToID>()      - See L<XML::Pastor::Builtin::token>.

=item B<VendorShipToID>()      - See L<XML::Pastor::Builtin::token>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
