
#PASTOR: Code generated by XML::Pastor/1.0.3 at 'Thu Mar  8 15:06:49 2012'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package Edge::B2B::XML::Type::OIAVersion;

use Edge::B2B::XML::Type::BetaReleaseName;
use Edge::B2B::XML::Type::BetaSubVersion;
use Edge::B2B::XML::Type::MajorVersion;
use Edge::B2B::XML::Type::MinorVersion;

our @ISA=qw(XML::Pastor::ComplexType);

Edge::B2B::XML::Type::OIAVersion->mk_accessors( qw(MajorVersion MinorVersion BetaReleaseName BetaSubVersion));

Edge::B2B::XML::Type::OIAVersion->XmlSchemaType( bless( {
                 'attributeInfo' => {},
                 'attributePrefix' => '_',
                 'attributes' => [],
                 'baseClasses' => [
                                    'XML::Pastor::ComplexType'
                                  ],
                 'class' => 'Edge::B2B::XML::Type::OIAVersion',
                 'contentType' => 'complex',
                 'documentation' => bless( [
                                             bless( {
                                                      'text' => 'Required - contains both major and minor version numbers of the OIA SPEC with optional BetaSubVersion for SPEC development.'
                                                    }, 'XML::Pastor::Schema::Documentation' )
                                           ], 'Data::HashArray' ),
                 'elementInfo' => {
                                  'BetaReleaseName' => bless( {
                                                              'class' => 'Edge::B2B::XML::Type::BetaReleaseName',
                                                              'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                              'minOccurs' => '0',
                                                              'name' => 'BetaReleaseName',
                                                              'scope' => 'local',
                                                              'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                              'type' => 'BetaReleaseName|http://ws.outdoorindustry.org/v2'
                                                            }, 'XML::Pastor::Schema::Element' ),
                                  'BetaSubVersion' => bless( {
                                                             'class' => 'Edge::B2B::XML::Type::BetaSubVersion',
                                                             'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'BetaSubVersion',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                             'type' => 'BetaSubVersion|http://ws.outdoorindustry.org/v2'
                                                           }, 'XML::Pastor::Schema::Element' ),
                                  'MajorVersion' => bless( {
                                                           'class' => 'Edge::B2B::XML::Type::MajorVersion',
                                                           'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                           'name' => 'MajorVersion',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                           'type' => 'MajorVersion|http://ws.outdoorindustry.org/v2'
                                                         }, 'XML::Pastor::Schema::Element' ),
                                  'MinorVersion' => bless( {
                                                           'class' => 'Edge::B2B::XML::Type::MinorVersion',
                                                           'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                           'name' => 'MinorVersion',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                           'type' => 'MinorVersion|http://ws.outdoorindustry.org/v2'
                                                         }, 'XML::Pastor::Schema::Element' )
                                },
                 'elements' => [
                                 'MajorVersion',
                                 'MinorVersion',
                                 'BetaReleaseName',
                                 'BetaSubVersion'
                               ],
                 'isRedefinable' => 1,
                 'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                 'name' => 'OIAVersion',
                 'scope' => 'global',
                 'targetNamespace' => 'http://ws.outdoorindustry.org/v2'
               }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<Edge::B2B::XML::Type::OIAVersion>  -  A class generated by L<XML::Pastor> . 


=head1 DESCRIPTION

Required - contains both major and minor version numbers of the OIA SPEC with optional BetaSubVersion for SPEC development.


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.3 at 'Thu Mar  8 15:06:49 2012'


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<BetaReleaseName>()      - See L<Edge::B2B::XML::Type::BetaReleaseName>.

=item B<BetaSubVersion>()      - See L<Edge::B2B::XML::Type::BetaSubVersion>.

=item B<MajorVersion>()      - See L<Edge::B2B::XML::Type::MajorVersion>.

=item B<MinorVersion>()      - See L<Edge::B2B::XML::Type::MinorVersion>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
