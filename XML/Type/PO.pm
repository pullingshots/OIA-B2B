
#PASTOR: Code generated by XML::Pastor/1.0.3 at 'Thu Mar  8 15:06:49 2012'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package Edge::B2B::XML::Type::PO;

use Edge::B2B::XML::Type::Address;
use Edge::B2B::XML::Type::AttributesExtended;
use Edge::B2B::XML::Type::ID;
use Edge::B2B::XML::Type::MonetaryAmount;
use Edge::B2B::XML::Type::OIAHeader;
use Edge::B2B::XML::Type::POType;
use Edge::B2B::XML::Type::PO_Buyer;
use Edge::B2B::XML::Type::PO_CCPayment;
use Edge::B2B::XML::Type::PO_Products;
use Edge::B2B::XML::Type::PO_Terms;
use Edge::B2B::XML::Type::PO_Transport;

our @ISA=qw(XML::Pastor::ComplexType);

Edge::B2B::XML::Type::PO->mk_accessors( qw(Header POType PONumber CatalogID PODate TotalLineItems POTotal Promo Buyer Transport Terms CCPayment ShipTo VendorShipToID BillTo VendorBillToID CancelAfter DeliveryRequested ShipNotBefore DeliverNotBefore DeliverNoLater RequestedShipDate OrderNote ShippingNote Products AttributesExtended));

Edge::B2B::XML::Type::PO->XmlSchemaType( bless( {
                 'attributeInfo' => {},
                 'attributePrefix' => '_',
                 'attributes' => [],
                 'baseClasses' => [
                                    'XML::Pastor::ComplexType'
                                  ],
                 'class' => 'Edge::B2B::XML::Type::PO',
                 'contentType' => 'complex',
                 'documentation' => bless( [
                                             bless( {
                                                      'text' => 'Purchase Order document'
                                                    }, 'XML::Pastor::Schema::Documentation' )
                                           ], 'Data::HashArray' ),
                 'elementInfo' => {
                                  'AttributesExtended' => bless( {
                                                                 'class' => 'Edge::B2B::XML::Type::AttributesExtended',
                                                                 'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                                 'minOccurs' => '0',
                                                                 'name' => 'AttributesExtended',
                                                                 'scope' => 'local',
                                                                 'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                                 'type' => 'AttributesExtended|http://ws.outdoorindustry.org/v2'
                                                               }, 'XML::Pastor::Schema::Element' ),
                                  'BillTo' => bless( {
                                                     'class' => 'Edge::B2B::XML::Type::Address',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'The billing address that the invoice for this PO should be mailed to. '
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                     'name' => 'BillTo',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                     'type' => 'Address|http://ws.outdoorindustry.org/v2'
                                                   }, 'XML::Pastor::Schema::Element' ),
                                  'Buyer' => bless( {
                                                    'class' => 'Edge::B2B::XML::Type::PO_Buyer',
                                                    'documentation' => bless( [
                                                                                bless( {
                                                                                         'text' => 'The buyer responsible for this purchase order. '
                                                                                       }, 'XML::Pastor::Schema::Documentation' )
                                                                              ], 'Data::HashArray' ),
                                                    'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                    'name' => 'Buyer',
                                                    'scope' => 'local',
                                                    'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                    'type' => 'PO_Buyer|http://ws.outdoorindustry.org/v2'
                                                  }, 'XML::Pastor::Schema::Element' ),
                                  'CCPayment' => bless( {
                                                        'class' => 'Edge::B2B::XML::Type::PO_CCPayment',
                                                        'documentation' => bless( [
                                                                                    bless( {
                                                                                             'text' => 'Optional'
                                                                                           }, 'XML::Pastor::Schema::Documentation' )
                                                                                  ], 'Data::HashArray' ),
                                                        'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                        'minOccurs' => '0',
                                                        'name' => 'CCPayment',
                                                        'scope' => 'local',
                                                        'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                        'type' => 'PO_CCPayment|http://ws.outdoorindustry.org/v2'
                                                      }, 'XML::Pastor::Schema::Element' ),
                                  'CancelAfter' => bless( {
                                                          'class' => 'XML::Pastor::Builtin::date',
                                                          'documentation' => bless( [
                                                                                      bless( {
                                                                                               'text' => 'This PO should be cancelled on this date'
                                                                                             }, 'XML::Pastor::Schema::Documentation' )
                                                                                    ], 'Data::HashArray' ),
                                                          'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                          'minOccurs' => '0',
                                                          'name' => 'CancelAfter',
                                                          'scope' => 'local',
                                                          'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                          'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                        }, 'XML::Pastor::Schema::Element' ),
                                  'CatalogID' => bless( {
                                                        'class' => 'Edge::B2B::XML::Type::ID',
                                                        'documentation' => bless( [
                                                                                    bless( {
                                                                                             'text' => 'References the Catalog DocumentID that was used to determine products, description, pricing, etc.  for items on this PO.  '
                                                                                           }, 'XML::Pastor::Schema::Documentation' ),
                                                                                    bless( {
                                                                                             'text' => 'Some vendors may require this field so that they can link the PO back to the catalog the PO was written against.  Could be used to validate product pricing and accessibility. '
                                                                                           }, 'XML::Pastor::Schema::Documentation' )
                                                                                  ], 'Data::HashArray' ),
                                                        'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                        'minOccurs' => '0',
                                                        'name' => 'CatalogID',
                                                        'scope' => 'local',
                                                        'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                        'type' => 'ID|http://ws.outdoorindustry.org/v2'
                                                      }, 'XML::Pastor::Schema::Element' ),
                                  'DeliverNoLater' => bless( {
                                                             'class' => 'XML::Pastor::Builtin::date',
                                                             'documentation' => bless( [
                                                                                         bless( {
                                                                                                  'text' => 'The PO shipment should not be delivered after this date'
                                                                                                }, 'XML::Pastor::Schema::Documentation' )
                                                                                       ], 'Data::HashArray' ),
                                                             'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'DeliverNoLater',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                             'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                           }, 'XML::Pastor::Schema::Element' ),
                                  'DeliverNotBefore' => bless( {
                                                               'class' => 'XML::Pastor::Builtin::date',
                                                               'documentation' => bless( [
                                                                                           bless( {
                                                                                                    'text' => 'The PO shipment should not be delivered before this date'
                                                                                                  }, 'XML::Pastor::Schema::Documentation' )
                                                                                         ], 'Data::HashArray' ),
                                                               'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                               'minOccurs' => '0',
                                                               'name' => 'DeliverNotBefore',
                                                               'scope' => 'local',
                                                               'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                               'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                             }, 'XML::Pastor::Schema::Element' ),
                                  'DeliveryRequested' => bless( {
                                                                'class' => 'XML::Pastor::Builtin::date',
                                                                'documentation' => bless( [
                                                                                            bless( {
                                                                                                     'text' => 'The PO shipment is  requested to arrive on this date.'
                                                                                                   }, 'XML::Pastor::Schema::Documentation' )
                                                                                          ], 'Data::HashArray' ),
                                                                'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                                'minOccurs' => '0',
                                                                'name' => 'DeliveryRequested',
                                                                'scope' => 'local',
                                                                'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                                'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                              }, 'XML::Pastor::Schema::Element' ),
                                  'Header' => bless( {
                                                     'class' => 'Edge::B2B::XML::Type::OIAHeader',
                                                     'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                     'name' => 'Header',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                     'type' => 'OIAHeader|http://ws.outdoorindustry.org/v2'
                                                   }, 'XML::Pastor::Schema::Element' ),
                                  'OrderNote' => bless( {
                                                        'class' => 'XML::Pastor::Builtin::token',
                                                        'documentation' => bless( [
                                                                                    bless( {
                                                                                             'text' => 'Free form notes about the order.  If included, they should be read by the vendor.'
                                                                                           }, 'XML::Pastor::Schema::Documentation' )
                                                                                  ], 'Data::HashArray' ),
                                                        'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                        'minOccurs' => '0',
                                                        'name' => 'OrderNote',
                                                        'scope' => 'local',
                                                        'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                        'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                      }, 'XML::Pastor::Schema::Element' ),
                                  'PODate' => bless( {
                                                     'class' => 'XML::Pastor::Builtin::date',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'Date the PO was submitted'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                     'name' => 'PODate',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                     'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                   }, 'XML::Pastor::Schema::Element' ),
                                  'PONumber' => bless( {
                                                       'class' => 'XML::Pastor::Builtin::token',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'PONumber is an identifier that the retailer assigns to the PO.  Often, this identifier will be referenced in verbal or written communication between the retailer and vendor.  The PONumber needs to be unique in the interactions for one vendor/retailer partnership.  '
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                       'name' => 'PONumber',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                       'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                     }, 'XML::Pastor::Schema::Element' ),
                                  'POTotal' => bless( {
                                                      'class' => 'Edge::B2B::XML::Type::MonetaryAmount',
                                                      'documentation' => bless( [
                                                                                  bless( {
                                                                                           'text' => 'The total monetary value represented by this PO.'
                                                                                         }, 'XML::Pastor::Schema::Documentation' )
                                                                                ], 'Data::HashArray' ),
                                                      'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                      'name' => 'POTotal',
                                                      'scope' => 'local',
                                                      'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                      'type' => 'MonetaryAmount|http://ws.outdoorindustry.org/v2'
                                                    }, 'XML::Pastor::Schema::Element' ),
                                  'POType' => bless( {
                                                     'class' => 'Edge::B2B::XML::Type::POType',
                                                     'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                     'name' => 'POType',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                     'type' => 'POType|http://ws.outdoorindustry.org/v2'
                                                   }, 'XML::Pastor::Schema::Element' ),
                                  'Products' => bless( {
                                                       'class' => 'Edge::B2B::XML::Type::PO_Products',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'Product section of the PO'
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                       'name' => 'Products',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                       'type' => 'PO_Products|http://ws.outdoorindustry.org/v2'
                                                     }, 'XML::Pastor::Schema::Element' ),
                                  'Promo' => bless( {
                                                    'class' => 'XML::Pastor::Builtin::token',
                                                    'documentation' => bless( [
                                                                                bless( {
                                                                                         'text' => 'Optional: Promotional code used on a per relationship basis. '
                                                                                       }, 'XML::Pastor::Schema::Documentation' )
                                                                              ], 'Data::HashArray' ),
                                                    'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                    'minOccurs' => '0',
                                                    'name' => 'Promo',
                                                    'scope' => 'local',
                                                    'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                    'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                  }, 'XML::Pastor::Schema::Element' ),
                                  'RequestedShipDate' => bless( {
                                                                'class' => 'XML::Pastor::Builtin::date',
                                                                'documentation' => bless( [
                                                                                            bless( {
                                                                                                     'text' => 'A request that the  PO shipment be shipped on this date.'
                                                                                                   }, 'XML::Pastor::Schema::Documentation' )
                                                                                          ], 'Data::HashArray' ),
                                                                'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                                'minOccurs' => '0',
                                                                'name' => 'RequestedShipDate',
                                                                'scope' => 'local',
                                                                'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                                'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                              }, 'XML::Pastor::Schema::Element' ),
                                  'ShipNotBefore' => bless( {
                                                            'class' => 'XML::Pastor::Builtin::date',
                                                            'documentation' => bless( [
                                                                                        bless( {
                                                                                                 'text' => 'Do not ship the PO before this date.'
                                                                                               }, 'XML::Pastor::Schema::Documentation' )
                                                                                      ], 'Data::HashArray' ),
                                                            'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                            'minOccurs' => '0',
                                                            'name' => 'ShipNotBefore',
                                                            'scope' => 'local',
                                                            'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                            'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                          }, 'XML::Pastor::Schema::Element' ),
                                  'ShipTo' => bless( {
                                                     'class' => 'Edge::B2B::XML::Type::Address',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'The ship to address for the items on this PO'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                     'name' => 'ShipTo',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                     'type' => 'Address|http://ws.outdoorindustry.org/v2'
                                                   }, 'XML::Pastor::Schema::Element' ),
                                  'ShippingNote' => bless( {
                                                           'class' => 'XML::Pastor::Builtin::token',
                                                           'documentation' => bless( [
                                                                                       bless( {
                                                                                                'text' => 'Free form notes about the order.  If included, they should be read by the vendor.'
                                                                                              }, 'XML::Pastor::Schema::Documentation' )
                                                                                     ], 'Data::HashArray' ),
                                                           'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                           'minOccurs' => '0',
                                                           'name' => 'ShippingNote',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                           'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                         }, 'XML::Pastor::Schema::Element' ),
                                  'Terms' => bless( {
                                                    'class' => 'Edge::B2B::XML::Type::PO_Terms',
                                                    'documentation' => bless( [
                                                                                bless( {
                                                                                         'text' => 'Optional. '
                                                                                       }, 'XML::Pastor::Schema::Documentation' )
                                                                              ], 'Data::HashArray' ),
                                                    'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                    'minOccurs' => '0',
                                                    'name' => 'Terms',
                                                    'scope' => 'local',
                                                    'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                    'type' => 'PO_Terms|http://ws.outdoorindustry.org/v2'
                                                  }, 'XML::Pastor::Schema::Element' ),
                                  'TotalLineItems' => bless( {
                                                             'class' => 'XML::Pastor::Builtin::integer',
                                                             'documentation' => bless( [
                                                                                         bless( {
                                                                                                  'text' => 'Number of line items included in the PO. '
                                                                                                }, 'XML::Pastor::Schema::Documentation' )
                                                                                       ], 'Data::HashArray' ),
                                                             'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                             'name' => 'TotalLineItems',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                             'type' => 'integer|http://www.w3.org/2001/XMLSchema'
                                                           }, 'XML::Pastor::Schema::Element' ),
                                  'Transport' => bless( {
                                                        'class' => 'Edge::B2B::XML::Type::PO_Transport',
                                                        'documentation' => bless( [
                                                                                    bless( {
                                                                                             'text' => 'Specifies the shipping and transportation parameters to be used.'
                                                                                           }, 'XML::Pastor::Schema::Documentation' )
                                                                                  ], 'Data::HashArray' ),
                                                        'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                        'name' => 'Transport',
                                                        'scope' => 'local',
                                                        'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                        'type' => 'PO_Transport|http://ws.outdoorindustry.org/v2'
                                                      }, 'XML::Pastor::Schema::Element' ),
                                  'VendorBillToID' => bless( {
                                                             'class' => 'XML::Pastor::Builtin::token',
                                                             'documentation' => bless( [
                                                                                         bless( {
                                                                                                  'text' => 'Optional. The vendor system will sometimes have a billing address identifier for the retailers locations.  '
                                                                                                }, 'XML::Pastor::Schema::Documentation' )
                                                                                       ], 'Data::HashArray' ),
                                                             'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'VendorBillToID',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                             'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                           }, 'XML::Pastor::Schema::Element' ),
                                  'VendorShipToID' => bless( {
                                                             'class' => 'XML::Pastor::Builtin::token',
                                                             'documentation' => bless( [
                                                                                         bless( {
                                                                                                  'text' => 'Optional. The vendor system will sometimes have a shipping address identifier for the retailers locations.  '
                                                                                                }, 'XML::Pastor::Schema::Documentation' )
                                                                                       ], 'Data::HashArray' ),
                                                             'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'VendorShipToID',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                             'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                           }, 'XML::Pastor::Schema::Element' )
                                },
                 'elements' => [
                                 'Header',
                                 'POType',
                                 'PONumber',
                                 'CatalogID',
                                 'PODate',
                                 'TotalLineItems',
                                 'POTotal',
                                 'Promo',
                                 'Buyer',
                                 'Transport',
                                 'Terms',
                                 'CCPayment',
                                 'ShipTo',
                                 'VendorShipToID',
                                 'BillTo',
                                 'VendorBillToID',
                                 'CancelAfter',
                                 'DeliveryRequested',
                                 'ShipNotBefore',
                                 'DeliverNotBefore',
                                 'DeliverNoLater',
                                 'RequestedShipDate',
                                 'OrderNote',
                                 'ShippingNote',
                                 'Products',
                                 'AttributesExtended'
                               ],
                 'isRedefinable' => 1,
                 'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                 'name' => 'PO',
                 'scope' => 'global',
                 'targetNamespace' => 'http://ws.outdoorindustry.org/v2'
               }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<Edge::B2B::XML::Type::PO>  -  A class generated by L<XML::Pastor> . 


=head1 DESCRIPTION

Purchase Order document


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.3 at 'Thu Mar  8 15:06:49 2012'


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<AttributesExtended>()      - See L<Edge::B2B::XML::Type::AttributesExtended>.

=item B<BillTo>()      - See L<Edge::B2B::XML::Type::Address>.

=item B<Buyer>()      - See L<Edge::B2B::XML::Type::PO_Buyer>.

=item B<CCPayment>()      - See L<Edge::B2B::XML::Type::PO_CCPayment>.

=item B<CancelAfter>()      - See L<XML::Pastor::Builtin::date>.

=item B<CatalogID>()      - See L<Edge::B2B::XML::Type::ID>.

=item B<DeliverNoLater>()      - See L<XML::Pastor::Builtin::date>.

=item B<DeliverNotBefore>()      - See L<XML::Pastor::Builtin::date>.

=item B<DeliveryRequested>()      - See L<XML::Pastor::Builtin::date>.

=item B<Header>()      - See L<Edge::B2B::XML::Type::OIAHeader>.

=item B<OrderNote>()      - See L<XML::Pastor::Builtin::token>.

=item B<PODate>()      - See L<XML::Pastor::Builtin::date>.

=item B<PONumber>()      - See L<XML::Pastor::Builtin::token>.

=item B<POTotal>()      - See L<Edge::B2B::XML::Type::MonetaryAmount>.

=item B<POType>()      - See L<Edge::B2B::XML::Type::POType>.

=item B<Products>()      - See L<Edge::B2B::XML::Type::PO_Products>.

=item B<Promo>()      - See L<XML::Pastor::Builtin::token>.

=item B<RequestedShipDate>()      - See L<XML::Pastor::Builtin::date>.

=item B<ShipNotBefore>()      - See L<XML::Pastor::Builtin::date>.

=item B<ShipTo>()      - See L<Edge::B2B::XML::Type::Address>.

=item B<ShippingNote>()      - See L<XML::Pastor::Builtin::token>.

=item B<Terms>()      - See L<Edge::B2B::XML::Type::PO_Terms>.

=item B<TotalLineItems>()      - See L<XML::Pastor::Builtin::integer>.

=item B<Transport>()      - See L<Edge::B2B::XML::Type::PO_Transport>.

=item B<VendorBillToID>()      - See L<XML::Pastor::Builtin::token>.

=item B<VendorShipToID>()      - See L<XML::Pastor::Builtin::token>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
