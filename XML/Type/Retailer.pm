
#PASTOR: Code generated by XML::Pastor/1.0.3 at 'Thu Mar  8 15:06:49 2012'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package Edge::B2B::XML::Type::Retailer;

use Edge::B2B::XML::Type::AttributesExtended;

our @ISA=qw(XML::Pastor::ComplexType);

Edge::B2B::XML::Type::Retailer->mk_accessors( qw(RetailerID RetailerName RetailerCustomerNumber AttributesExtended));

Edge::B2B::XML::Type::Retailer->XmlSchemaType( bless( {
                 'attributeInfo' => {},
                 'attributePrefix' => '_',
                 'attributes' => [],
                 'baseClasses' => [
                                    'XML::Pastor::ComplexType'
                                  ],
                 'class' => 'Edge::B2B::XML::Type::Retailer',
                 'contentType' => 'complex',
                 'documentation' => bless( [
                                             bless( {
                                                      'text' => 'Base type for retailer information.'
                                                    }, 'XML::Pastor::Schema::Documentation' )
                                           ], 'Data::HashArray' ),
                 'elementInfo' => {
                                  'AttributesExtended' => bless( {
                                                                 'class' => 'Edge::B2B::XML::Type::AttributesExtended',
                                                                 'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                                 'minOccurs' => '0',
                                                                 'name' => 'AttributesExtended',
                                                                 'scope' => 'local',
                                                                 'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                                 'type' => 'AttributesExtended|http://ws.outdoorindustry.org/v2'
                                                               }, 'XML::Pastor::Schema::Element' ),
                                  'RetailerCustomerNumber' => bless( {
                                                                     'class' => 'XML::Pastor::Builtin::token',
                                                                     'documentation' => bless( [
                                                                                                 bless( {
                                                                                                          'text' => 'Retailer number (optional). If used, this number is agreed upon betwee the retailer and the vendor; typically assigned by the vendor based on information in vendor\'s system.'
                                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                                               ], 'Data::HashArray' ),
                                                                     'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                                     'minOccurs' => '0',
                                                                     'name' => 'RetailerCustomerNumber',
                                                                     'scope' => 'local',
                                                                     'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                                     'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                                   }, 'XML::Pastor::Schema::Element' ),
                                  'RetailerID' => bless( {
                                                         'class' => 'XML::Pastor::Builtin::token',
                                                         'documentation' => bless( [
                                                                                     bless( {
                                                                                              'text' => 'Retailer identifier. This identifier is agreed upon between the retailer and the vendor. Often, this matches the retailer identifier found in the vendor\'s system. If no such identifier has been agreed upon, use a string derived from retailer\'s international phone number, i.e. +1-555-666-7777 becomes 15556667777.'
                                                                                            }, 'XML::Pastor::Schema::Documentation' )
                                                                                   ], 'Data::HashArray' ),
                                                         'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                         'name' => 'RetailerID',
                                                         'scope' => 'local',
                                                         'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                         'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                       }, 'XML::Pastor::Schema::Element' ),
                                  'RetailerName' => bless( {
                                                           'class' => 'XML::Pastor::Builtin::token',
                                                           'documentation' => bless( [
                                                                                       bless( {
                                                                                                'text' => 'Retailer name. Use the name of the business.'
                                                                                              }, 'XML::Pastor::Schema::Documentation' )
                                                                                     ], 'Data::HashArray' ),
                                                           'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                                                           'name' => 'RetailerName',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://ws.outdoorindustry.org/v2',
                                                           'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                         }, 'XML::Pastor::Schema::Element' )
                                },
                 'elements' => [
                                 'RetailerID',
                                 'RetailerName',
                                 'RetailerCustomerNumber',
                                 'AttributesExtended'
                               ],
                 'isRedefinable' => 1,
                 'metaClass' => 'Edge::B2B::XML::Pastor::Meta',
                 'name' => 'Retailer',
                 'scope' => 'global',
                 'targetNamespace' => 'http://ws.outdoorindustry.org/v2'
               }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<Edge::B2B::XML::Type::Retailer>  -  A class generated by L<XML::Pastor> . 


=head1 DESCRIPTION

Base type for retailer information.


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.3 at 'Thu Mar  8 15:06:49 2012'


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<AttributesExtended>()      - See L<Edge::B2B::XML::Type::AttributesExtended>.

=item B<RetailerCustomerNumber>()      - See L<XML::Pastor::Builtin::token>.

=item B<RetailerID>()      - See L<XML::Pastor::Builtin::token>.

=item B<RetailerName>()      - See L<XML::Pastor::Builtin::token>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
