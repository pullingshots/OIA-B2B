<?xml version="1.0" encoding="utf-8" ?>
<!--
Outdoor B2B Spec Version 2.0
-->
<!--
Personal information - including credit card data - can be transmitted in a document derived from this schema.
Obey local, state, and federal laws and regulations regarding transmission and use of such data and documents.
-->
<!--
TO ENSURE PROPER VALIDATION AND ERROR HANDLING, OIA B2B PARTNERS ARE REQUIRED TO ENSURE THAT ALL RELATED
DOCUMENTS ARE VALIDATED AGAINST THE OFFICIAL NAMESPACE URI. THIS GUARANTEES ACCURATE VALIDATION, EVEN IF
THE MAPPED MinorVersion IS OLDER THAN THE VERSION USED BY THE SYSTEM GENERATING THE REQUEST/RESPONSE.
-->
<!--
OIA B2B V2 specifications extend beyond the .wsdl and .xsd documents and include standards for format, 
transport, authentication, and security. All additional standards and specification information is 
available in the OIA B2B whitepaper document on the OIA website at 
http://www.outdoorindustry.org/research.industry.php?action=detail&research_id=36
-->
<xs:schema xmlns="http://ws.outdoorindustry.org/v2" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.outdoorindustry.org/v2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>Outdoor Industry Association B2B XML schema, version 2.0</xs:documentation>
  </xs:annotation>
  <!-- Predefined Types -->
  <xs:simpleType name="MajorVersion">
    <xs:restriction base="xs:integer">
      <xs:enumeration value="2" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MinorVersion">
    <xs:restriction base="xs:integer">
      <xs:enumeration value="0" />
      <xs:enumeration value="1" />
      <xs:enumeration value="2" />
      <xs:enumeration value="3" />
      <xs:enumeration value="4" />
      <xs:enumeration value="5" />
      <xs:enumeration value="6" />
      <xs:enumeration value="7" />
      <xs:enumeration value="8" />
      <xs:enumeration value="9" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BetaReleaseName">
    <xs:annotation>
      <xs:documentation>Optional designation for beta development</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token" />
  </xs:simpleType>
  <xs:simpleType name="BetaSubVersion">
    <xs:annotation>
      <xs:documentation>Optional designation for beta development</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:integer" />
  </xs:simpleType>
  <xs:complexType name="OIAVersion">
    <xs:annotation>
      <xs:documentation>Required - contains both major and minor version numbers of the OIA SPEC with optional BetaSubVersion for SPEC development.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="MajorVersion" type="MajorVersion" />
      <xs:element name="MinorVersion" type="MinorVersion" />
      <xs:element minOccurs="0" name="BetaReleaseName" type="BetaReleaseName" />
      <xs:element minOccurs="0" name="BetaSubVersion" type="BetaSubVersion" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BaseID">
    <xs:annotation>
      <xs:documentation>A unique identifier.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:token" />
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="ID">
    <xs:annotation>
      <xs:documentation>A globally unique identifier. The ID should never be repeated. GUID's work well for this field.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:restriction base="BaseID">
        <xs:minLength value="1" />
        <xs:maxLength value="200" />
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="UPC_EAN">
    <xs:annotation>
      <xs:documentation>The UPC or EAN number that is assigned to a product. All parties are expected to use the UPC/EAN code and their descendants as the primary identifier of an item.  In general, each catalog should only have one occurrence of a UPC. Or another way of saying it, there should not be multiple occurrences of the same UPC for different products in the catalog.  The UPC field is the main unique product identifier used in most of the B2B documents.  UPC's should also not be reused over time.  Once it is assigned to a specific product, it should not be reassigned to a new product, even if the old product is no longer available.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:pattern value="[0-9]{6,14}" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Gender">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Mens" />
      <xs:enumeration value="Womens" />
      <xs:enumeration value="Boys" />
      <xs:enumeration value="Girls" />
      <xs:enumeration value="Unisex" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ColorCode">
    <xs:annotation>
      <xs:documentation>Accomodates a color code and allows for specification of the color code type. Examples: RGB, Pantone, etc.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:token">
        <xs:attribute name="ColorCodeType" type="xs:token" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Currency">
    <xs:restriction base="xs:token">
      <xs:enumeration value="USD" />
      <xs:enumeration value="CAD" />
      <xs:enumeration value="EUR" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="WeightUnits">
    <xs:restriction base="xs:token">
      <xs:enumeration value="lb" />
      <xs:enumeration value="kg" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="MonetaryAmount">
    <xs:annotation>
      <xs:documentation>Type for money fields - requires currency attribute according to ISO 4217 Currency Abbreviation</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="Currency" type="Currency" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Weight">
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="WeightUnits" type="WeightUnits" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="POType">
    <xs:annotation>
      <xs:documentation>Indicates what the purpose of this PO is.</xs:documentation>
      <xs:documentation>'Standalone' is a standard PO (often also referred to as an 'ASAP' order).</xs:documentation>
      <xs:documentation>'Dropship' indicates that the PO is to be shipped to an address other than a known retailer address, usually the end  customer.</xs:documentation>
      <xs:documentation>'Preseason' is a standard preseason order. If intending to 'release' POs against a master PO at a latter date, use the 'Bulk' POType
				</xs:documentation>
      <xs:documentation>'EmployeePurchase' indicates a PO for a retail store employee using a vendor EP purchase plan, usually but not always sent to retailer address
				</xs:documentation>
      <xs:documentation>'ProPurchase' indicates an order for Pro Purchase, not a retail store employee. More often used internally by vendors. </xs:documentation>
      <xs:documentation>'Bulk' is similar to Preseason but 'reserves' product and doesn't ship as ordered by quantity or ship date, requires a 'Release' PO that specifies partial or complete release of the reserved quantities from the original Bulk; more than one 'Release' event / PO may be allowed against each Bulk</xs:documentation>
      <xs:documentation>'Release'</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Standalone" />
      <xs:enumeration value="Dropship" />
      <xs:enumeration value="Preseason" />
      <xs:enumeration value="EmployeePurchase" />
      <xs:enumeration value="ProPurchase" />
      <xs:enumeration value="Bulk" />
      <xs:enumeration value="Release" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FOBPoint">
    <xs:annotation>
      <xs:documentation>Freight On Board</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Origin" />
      <xs:enumeration value="Destination" />
      <xs:enumeration value="PerContract" />
      <xs:enumeration value="Other" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ShippingAgent">
    <xs:restriction base="xs:token">
      <xs:enumeration value="UPS" />
      <xs:enumeration value="FedEx" />
      <xs:enumeration value="Purolator" />
      <xs:enumeration value="PostalService" />
      <xs:enumeration value="CustomerPickup" />
      <xs:enumeration value="VendorDelivery" />
      <xs:enumeration value="PerContract" />
      <xs:enumeration value="Other" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DeliverySpecification">
    <xs:annotation>
      <xs:documentation>Used to specify the class of shipping to be used.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="NextAMAir" />
      <xs:enumeration value="NextDayAir" />
      <xs:enumeration value="2DayAir" />
      <xs:enumeration value="3DayAir" />
      <xs:enumeration value="Ground" />
      <xs:enumeration value="ParcelPost" />
      <xs:enumeration value="CustomerPickup" />
      <xs:enumeration value="PerContract" />
      <xs:enumeration value="Other" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FreightBillingMethod">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Prepaid" />
      <xs:enumeration value="PrepayAndAdd" />
      <xs:enumeration value="Collect" />
      <xs:enumeration value="BillToRetailerAccount" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Attribute">
    <xs:sequence>
      <xs:element name="AttributeName" type="xs:token" />
      <xs:element name="AttributeValue" type="xs:token" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AttributesExtended">
    <xs:annotation>
      <xs:documentation>Optional: This element provides a method for the retailer to include more attributes for the product than just color and size.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Attribute" type="Attribute" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BaseTerms">
    <xs:annotation>
      <xs:documentation>Optional. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="NetDays" type="xs:integer">
        <xs:annotation>
          <xs:documentation>Number of days from the invoice date that the net value of the invoice is due.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="TermsDescription" type="xs:token">
        <xs:annotation>
          <xs:documentation>Freeform description of the payment terms for this PO</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="DueDate" type="xs:date" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BaseDiscount">
    <xs:sequence>
      <xs:element name="DiscountPercent" type="xs:decimal">
        <xs:annotation>
          <xs:documentation>Percent discount of the net invoice to be deducted if invoice is paid DiscountDays (see below) after the invoice date</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DiscountDays" type="xs:integer" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Vendor">
    <xs:annotation>
      <xs:documentation>Base type for vendor information.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="VendorID" type="xs:token">
        <xs:annotation>
          <xs:documentation>Vendor identifier. This identifier is agreed upon between the retailer and the vendor. Often, this matches the vendor identifier found in the retailer's system. If no such identifier has been agreed upon, use a string derived from vendor's international phone number, i.e. +1-555-666-7777 becomes 15556667777.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="VendorName" type="xs:token">
        <xs:annotation>
          <xs:documentation>Vendor name. Use the name of the business.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="VendorNumber" type="xs:token">
        <xs:annotation>
          <xs:documentation>Vendor number (optional). If used, this number is agreed upon between the retailer and the vendor; typically assigned by the retailer based on information in retailer's system.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Retailer">
    <xs:annotation>
      <xs:documentation>Base type for retailer information.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="RetailerID" type="xs:token">
        <xs:annotation>
          <xs:documentation>Retailer identifier. This identifier is agreed upon between the retailer and the vendor. Often, this matches the retailer identifier found in the vendor's system. If no such identifier has been agreed upon, use a string derived from retailer's international phone number, i.e. +1-555-666-7777 becomes 15556667777.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RetailerName" type="xs:token">
        <xs:annotation>
          <xs:documentation>Retailer name. Use the name of the business.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="RetailerCustomerNumber" type="xs:token">
        <xs:annotation>
          <xs:documentation>Retailer number (optional). If used, this number is agreed upon betwee the retailer and the vendor; typically assigned by the vendor based on information in vendor's system.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OIAHeader">
    <xs:annotation>
      <xs:documentation>Combined header information for all document exchanges</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DocumentID" type="ID" />
      <xs:element name="DocumentVersion" type="OIAVersion">
        <xs:annotation>
          <xs:documentation>Schema version used by the system generating the document. If the server supports multiple schema versions, responses should (but are not required to) be returned according to the same schema version. If a request is submitted using a greater MinorVersion than supported by the server, the server may choose to reject the request with an appropriate message. The server may also, however, choose to accept such documents and attempt parsing. TO ENSURE PROPER VALIDATION AND ERROR HANDLING, OIA B2B PARTNERS ARE REQUIRED TO ENSURE THAT ALL RELATED DOCUMENTS ARE VALIDATED AGAINST THE OFFICIAL NAMESPACE URI. THIS GUARANTEES ACCURATE VALIDATION, EVEN IF THE MAPPED MinorVersion IS OLDER THAN THE VERSION USED BY THE SYSTEM GENERATING THE REQUEST/RESPONSE.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="RequestDateTime" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Date and time of the generated request.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ResponseDateTime" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Date and time of the generated response.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Vendor" type="Vendor" />
      <xs:element name="Retailer" type="Retailer" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Address">
    <xs:annotation>
      <xs:documentation>Base type for physical street address.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="LocationName" type="xs:token">
        <xs:annotation>
          <xs:documentation>Addressee name (optional). Often the name of a company or individual.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Attn" type="xs:token">
        <xs:annotation>
          <xs:documentation>Attention of individual or department (optional).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Address1" type="xs:token">
        <xs:annotation>
          <xs:documentation>First address line.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Address2" type="xs:token">
        <xs:annotation>
          <xs:documentation>Second address line (optional).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Address3" type="xs:token">
        <xs:annotation>
          <xs:documentation>Third address line (optional).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ResidentialAddress" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Optional. Indicates whether the address is residential or not. Note: If absent on a PO, it will be interpreted according to context; 'true' if POType is 'Dropship', 'false' if POType is 'Standalone', 'Forecast', or 'Preseason'. For any other POType it will be interpreted according to initial PO.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="City" type="xs:token">
        <xs:annotation>
          <xs:documentation>Name of city, town, or equivalent for this address.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="State" type="xs:token">
        <xs:annotation>
          <xs:documentation>Standardized code or abbreviation of the state or province name for this address. For U.S. states, use the 2 letter state code, i.e. 'CO' for Colorado. Note: Certain countries do not normally include the name, code, or abbreviation of the state or province with the address. In such cases, leave this element blank.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PostalCode" type="xs:token">
        <xs:annotation>
          <xs:documentation>ZIP or Postal code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Country">
        <xs:annotation>
          <xs:documentation>ISO 3166 three-letter country code (optional). Assumed to be 'USA' if empty or omitted.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:pattern value="[A-Z]{3}" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="PhoneNumber" type="xs:token">
        <xs:annotation>
          <xs:documentation>Phone number associated with address (optional).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BaseLineItem">
    <xs:annotation>
      <xs:documentation>Note: If a particular UPC does not appear in this list, the assumption is that it is not available for purchase. Most common reasons for this are: 1) the stock level currently is zero, 2) an incorrect UPC code was supplied in the request, or 3) the supplied UPC code is no longer available for unspecified reasons. The list shows the current inventory levels based on the request and does not in any way indicate recent changes in inventory.
		</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Description" type="xs:token">
        <xs:annotation>
          <xs:documentation>Describes what the product is. Ex/ Water Bottle</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="UPC_EAN" type="UPC_EAN" />
      <xs:element minOccurs="0" name="Gender" type="Gender" />
      <xs:element minOccurs="0" name="VendorStyleNumber" type="xs:token">
        <xs:annotation>
          <xs:documentation>Optional. Vendor Style number or identifier. Generally, the style will designate a group of products like a jacket. Allows the grouping of items when there are size runs and/or multiple colors.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="VendorSKU" type="xs:token">
        <xs:annotation>
          <xs:documentation>Optional. Vendor assigned Stock Keeping Unit</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="VendorColor" type="xs:token">
        <xs:annotation>
          <xs:documentation>Optional. Vendor assigned color for the item.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="VendorColorCode" type="ColorCode">
        <xs:annotation>
          <xs:documentation>Optional. Vendor assigned color code for the item.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="VendorSize" type="xs:token">
        <xs:annotation>
          <xs:documentation>Optional. Vendor assigned size for the item.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="BuyerSKU" type="xs:token">
        <xs:annotation>
          <xs:documentation>Optional. Buyer assigned Stock Keeping Unit</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="BuyerColor" type="xs:token">
        <xs:annotation>
          <xs:documentation>Optional. Color assigned to product by the retailer. May be different from VendorColor.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="BuyerColorCode" type="ColorCode">
        <xs:annotation>
          <xs:documentation>Optional. Buyer assigned color code for the item.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="BuyerSize" type="xs:token">
        <xs:annotation>
          <xs:documentation>Optional. Size assigned to product by the retailer. May be different from VendorSize.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="UnitOfMeasure" type="xs:token">
        <xs:annotation>
          <xs:documentation>The unit of measure of the product.</xs:documentation>
          <xs:documentation>It is highly recommended that this field is consistent. Use EA for each, PR for pair, DZ for dozen. Other units may be used upon coordination between the retailer and vendor</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BaseCatalog">
    <xs:sequence>
      <xs:element name="CatalogID" type="ID" />
      <xs:element name="CatalogDescription">
        <xs:annotation>
          <xs:documentation>Short description of what the catalog represents. Keep in mind that this field will probably be displayed to an end user. Please in include information that will allow the user to choose one catalog over another.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:minLength value="1" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="CatalogEffectiveDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>The date that the retailer can start to order product from this catalog.  This date does not mean the available ship date.  Essentially the vendor systems need to be ready to accept a PO based on this catalog by the CatalogEffectiveDate.  This date must match the date in the CatalogEffectiveDate in the Catalog document itself.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CatalogEndDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Represents the date that the retailer may no longer place a PO with the vendor based on this catalog.  This date must match the date in the CatalogEndDate in the Catalog document itself.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="CatalogAvailableToShipDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>The date the product listed in the catalog will be available to ship.  This date can be overridden by the same field in the product element below.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="LastAvailableToShipDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>The date the product listed in the catalog will no longer be available to be shipped.  This date can be overridden by the same field in the product element below. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="PublicationDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>The date that the catalog was published and made available to retailers or consumers of the catalog.  May be different from the GenerationDate element. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ContractReference" type="xs:token">
        <xs:annotation>
          <xs:documentation>If the catalog is based on a particular contractual agreement, the agreement can be referenced with this field.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ContractDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>If the catalog is based on a particular contractual agreement, the date agreement can be referenced with this field.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Comment" type="xs:token" />
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <!-- Documents -->
  <xs:complexType name="AvailableToSell">
    <xs:annotation>
      <xs:documentation>Document listing product availability by UPC. Reported availability should reflect the current and actual 'ready to ship' inventory levels and not include restricted/reserved/future inventory.  Rsponse DateTime is the actual date and time when supplied ATS data was recorded. Availability in this document must be current as of this date.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="OIAHeader" />
      <xs:element name="Products">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="LineItem">
              <xs:annotation>
                <xs:documentation>Note: If a particular UPC does not appear in this list, the assumption is that it is not available for purchase. Most common reasons for this are: 1) the stock level currently is zero, 2) an incorrect UPC code was supplied in the request, or 3) the supplied UPC code is no longer available for unspecified reasons. The list shows the current inventory levels based on the request and does not in any way indicate recent changes in inventory.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:complexContent mixed="false">
                  <xs:extension base="BaseLineItem">
                    <xs:sequence>
                      <xs:element name="AvailableQuantity" type="xs:integer">
                        <xs:annotation>
                          <xs:documentation>The actual quantity of the above UPC/EAN that is available for immediate shipment. The quantity is subject to change at any time. A buyer should query the vendor's systems before final order placement as necessary. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="NextAvailableDate" type="xs:date">
                        <xs:annotation>
                          <xs:documentation>The next date that a new quantity of the item is expected to be available.   ex/ The current AvailableQuantity might be zero, but in 2 weeks (specified by this date), there should be 20 more available (see NextAvailableQuantity)</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="NextAvailableQuantity" type="xs:integer">
                        <xs:annotation>
                          <xs:documentation>The quantity expected to be available on NextAvailableDate.</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:extension>
                </xs:complexContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Invoice">
    <xs:annotation>
      <xs:documentation>Invoice document</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="OIAHeader" />
      <xs:element name="InvoiceNumber" type="xs:token" />
      <xs:element name="PONumber" type="xs:token">
        <xs:annotation>
          <xs:documentation>PONumber is an identifier that the retailer assigns to the PO.  Often, this identifier will be referenced in verbal or written communication between the retailer and vendor.  The PONumber needs to be unique in the interactions for one vendor/retailer partnership.  </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TrackingNumber" type="xs:token" />
      <xs:element name="PODate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Date the PO was submitted</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ShipDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Date the items were shipped</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="InvoiceDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Date of the Invoice</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DueDays" type="xs:integer">
        <xs:annotation>
          <xs:documentation>Number of days from the invoice date that the invoice is due.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DueDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Date that payment is due</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TotalLineItems" type="xs:integer">
        <xs:annotation>
          <xs:documentation>Number of line items included in the Invoice. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TotalQuantity" type="xs:integer">
        <xs:annotation>
          <xs:documentation>The total number of items that are being invoiced.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TotalWeight" type="Weight">
        <xs:annotation>
          <xs:documentation>The total weight of the items that are being invoiced.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="InvoiceTotal" type="MonetaryAmount">
        <xs:annotation>
          <xs:documentation>The total monetary value represented by this Invoice.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Taxes">
        <xs:annotation>
          <xs:documentation>Tax amounts included in the InvoiceTotal.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="TaxAmount" type="MonetaryAmount" />
            <xs:element name="TaxPercent" type="xs:decimal" />
            <xs:element name="TaxID" type="xs:token" />
            <xs:element name="TaxableAmount" type="MonetaryAmount">
              <xs:annotation>
                <xs:documentation>The monetary amount that the TaxPercent is applied to.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PaidTotal" type="MonetaryAmount">
        <xs:annotation>
          <xs:documentation>The total amount paid.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OutstandingTotal" type="MonetaryAmount">
        <xs:annotation>
          <xs:documentation>The total amount outstanding.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Buyer">
        <xs:annotation>
          <xs:documentation>The buyer responsible for this purchase order. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="BuyerName" type="xs:token" />
            <xs:element name="BuyerPhone" type="xs:token" />
            <xs:element minOccurs="0" name="BuyerEMail" type="xs:token" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ShipTo" type="Address">
        <xs:annotation>
          <xs:documentation>The ship to address for the items on this PO</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="VendorShipToID" type="xs:token">
        <xs:annotation>
          <xs:documentation>Optional. The vendor system will sometimes have a shipping address identifier for the retailers locations.  </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BillTo" type="Address">
        <xs:annotation>
          <xs:documentation>The billing address that the invoice for this PO should be mailed to. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="VendorBillToID" type="xs:token">
        <xs:annotation>
          <xs:documentation>Optional. The vendor system will sometimes have a billing address identifier for the retailers locations.  </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RemitTo" type="Address">
        <xs:annotation>
          <xs:documentation>The address where payment should be sent. </xs:documentation>
        </xs:annotation>
      </xs:element>

      <xs:element minOccurs="0" name="InvoiceNote" type="xs:token">
        <xs:annotation>
          <xs:documentation>Free form notes about the invoice.  If included, they should be read by the vendor.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Products">
        <xs:annotation>
          <xs:documentation>Product section of the PO</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="LineItem">
              <xs:annotation>
                <xs:documentation>Repeating element that contains an individual item</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:complexContent mixed="false">
                  <xs:extension base="BaseLineItem">
                    <xs:sequence>
                      <xs:element name="Quantity" type="xs:integer">
                        <xs:annotation>
                          <xs:documentation>The number of items (designated by the UPC_EAN) that are being ordered.  If the POType is Change, this field is used to indicate the new quantity to be ordered. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element name="UnitPrice" type="MonetaryAmount">
                        <xs:annotation>
                          <xs:documentation>The price per item (designated by the UPC_EAN).</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element name="LineNumber" type="xs:integer">
                        <xs:annotation>
                          <xs:documentation>Sequential number for each item in the PO. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="LineComment" type="xs:token" />
                    </xs:sequence>
                  </xs:extension>
                </xs:complexContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PO">
    <xs:annotation>
      <xs:documentation>Purchase Order document</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="OIAHeader" />
      <xs:element name="POType" type="POType" />
      <xs:element name="PONumber" type="xs:token">
        <xs:annotation>
          <xs:documentation>PONumber is an identifier that the retailer assigns to the PO.  Often, this identifier will be referenced in verbal or written communication between the retailer and vendor.  The PONumber needs to be unique in the interactions for one vendor/retailer partnership.  </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="CatalogID" type="ID">
        <xs:annotation>
          <xs:documentation>References the Catalog DocumentID that was used to determine products, description, pricing, etc.  for items on this PO.  </xs:documentation>
          <xs:documentation>Some vendors may require this field so that they can link the PO back to the catalog the PO was written against.  Could be used to validate product pricing and accessibility. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PODate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Date the PO was submitted</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TotalLineItems" type="xs:integer">
        <xs:annotation>
          <xs:documentation>Number of line items included in the PO. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POTotal" type="MonetaryAmount">
        <xs:annotation>
          <xs:documentation>The total monetary value represented by this PO.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Promo" type="xs:token">
        <xs:annotation>
          <xs:documentation>Optional: Promotional code used on a per relationship basis. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Buyer">
        <xs:annotation>
          <xs:documentation>The buyer responsible for this purchase order. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="BuyerName" type="xs:token" />
            <xs:element name="BuyerPhone" type="xs:token" />
            <xs:element minOccurs="0" name="BuyerEMail" type="xs:token" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Transport">
        <xs:annotation>
          <xs:documentation>Specifies the shipping and transportation parameters to be used.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FOBPoint" type="FOBPoint" />
            <xs:element minOccurs="0" name="FOBPointOther" type="xs:token" />
            <xs:element name="ShippingAgent" type="ShippingAgent" />
            <xs:element minOccurs="0" name="ShippingAgentOther" type="xs:token" />
            <xs:element name="DeliverySpecification" type="DeliverySpecification" />
            <xs:element minOccurs="0" name="DeliverySpecificationOther" type="xs:token" />
            <xs:element name="FreightBillingMethod" type="FreightBillingMethod" />
            <xs:element minOccurs="0" name="BillToRetailerAccountInfo" type="xs:token">
              <xs:annotation>
                <xs:documentation>Used to provide account information to the vendor about the retailer's shipping account. </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="TransportComments" type="xs:token" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="Terms">
        <xs:annotation>
          <xs:documentation>Optional. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent mixed="false">
            <xs:extension base="BaseTerms">
              <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="Discounts" type="BaseDiscount" />
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="CCPayment">
        <xs:annotation>
          <xs:documentation>Optional</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CCType">
              <xs:annotation>
                <xs:documentation>What type of credit card.  visa, mc, etc.</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:token">
                  <xs:enumeration value="visa" />
                  <xs:enumeration value="mc" />
                  <xs:enumeration value="amex" />
                  <xs:enumeration value="discover" />
                  <xs:enumeration value="other" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="CCTypeOther" type="xs:token">
              <xs:annotation>
                <xs:documentation>If 'other' is specified above this needs to have a value. </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="CCNumber" type="xs:token">
              <xs:annotation>
                <xs:documentation>The Credit Card number</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="CCExpiration">
              <xs:annotation>
                <xs:documentation>Credit Card expiration date in the form MM/YY</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:token">
                  <xs:pattern value="[0-1]{1}[0-9]{1}/[0-9]{2}" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="CCSecurityCode">
              <xs:annotation>
                <xs:documentation>Optional. The Credit Card security code.</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:token">
                  <xs:pattern value="[0-9]{3,4}" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="CCName" type="xs:token">
              <xs:annotation>
                <xs:documentation>The name, as it appears, on the credit card. </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="CCAddress" type="Address">
              <xs:annotation>
                <xs:documentation>The billing address contact email address.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="CCPhone" type="xs:token">
              <xs:annotation>
                <xs:documentation>The billing address phone number</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="CCEMail" type="xs:token">
              <xs:annotation>
                <xs:documentation>The billing address contact email address.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ShipTo" type="Address">
        <xs:annotation>
          <xs:documentation>The ship to address for the items on this PO</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="VendorShipToID" type="xs:token">
        <xs:annotation>
          <xs:documentation>Optional. The vendor system will sometimes have a shipping address identifier for the retailers locations.  </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BillTo" type="Address">
        <xs:annotation>
          <xs:documentation>The billing address that the invoice for this PO should be mailed to. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="VendorBillToID" type="xs:token">
        <xs:annotation>
          <xs:documentation>Optional. The vendor system will sometimes have a billing address identifier for the retailers locations.  </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="CancelAfter" type="xs:date">
        <xs:annotation>
          <xs:documentation>This PO should be cancelled on this date</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="DeliveryRequested" type="xs:date">
        <xs:annotation>
          <xs:documentation>The PO shipment is  requested to arrive on this date.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ShipNotBefore" type="xs:date">
        <xs:annotation>
          <xs:documentation>Do not ship the PO before this date.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="DeliverNotBefore" type="xs:date">
        <xs:annotation>
          <xs:documentation>The PO shipment should not be delivered before this date</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="DeliverNoLater" type="xs:date">
        <xs:annotation>
          <xs:documentation>The PO shipment should not be delivered after this date</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="RequestedShipDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>A request that the  PO shipment be shipped on this date.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="OrderNote" type="xs:token">
        <xs:annotation>
          <xs:documentation>Free form notes about the order.  If included, they should be read by the vendor.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ShippingNote" type="xs:token">
        <xs:annotation>
          <xs:documentation>Free form notes about the order.  If included, they should be read by the vendor.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Products">
        <xs:annotation>
          <xs:documentation>Product section of the PO</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="LineItem">
              <xs:annotation>
                <xs:documentation>Repeating element that contains an individual item</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:complexContent mixed="false">
                  <xs:extension base="BaseLineItem">
                    <xs:sequence>
                      <xs:element name="Quantity" type="xs:integer">
                        <xs:annotation>
                          <xs:documentation>The number of items (designated by the UPC_EAN) that are being ordered.  If the POType is Change, this field is used to indicate the new quantity to be ordered. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element name="UnitPrice" type="MonetaryAmount">
                        <xs:annotation>
                          <xs:documentation>The price per item (designated by the UPC_EAN).</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element name="LineNumber" type="xs:integer">
                        <xs:annotation>
                          <xs:documentation>Sequential number for each item in the PO. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="LineComment" type="xs:token" />
                    </xs:sequence>
                  </xs:extension>
                </xs:complexContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DocumentReceipt">
    <xs:annotation>
      <xs:documentation>Basic acknowledgement that a document was received and properly parsed.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="OIAHeader" />
      <xs:element name="DocType">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="PO" />
            <xs:enumeration value="Invoice" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="AcknowledgedDocumentID" type="ID">
        <xs:annotation>
          <xs:documentation>ID of the original Document which is being receipted by this document.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Comment" type="xs:token" />
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CatalogRequest">
    <xs:annotation>
      <xs:documentation>A request document for retrieving a particular catalog</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="OIAHeader" />
      <xs:element name="CatalogID" type="ID" />
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CatalogListRequest">
    <xs:annotation>
      <xs:documentation>A request for a listing of available catalogs from a vendor</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="OIAHeader" />
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CatalogList">
    <xs:annotation>
      <xs:documentation>The response to a CatalogListRequest. Provides a list of available catalogs from a vendor</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="OIAHeader" />
      <xs:element minOccurs="0" name="Comment" type="xs:token" />
      <xs:element name="Catalogs">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="CatalogListItem" type="BaseCatalog" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Catalog">
    <xs:annotation>
      <xs:documentation>A vendor catalog that lists products for sale, when they are available, pricing, product details, etc.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="OIAHeader" />
      <xs:element name="GenerationDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>The date that the catalog instance was generated.   If the catalog is generated at run time by a request, this field should the current date. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BaseCatalog" type="BaseCatalog" />
      <xs:element name="Products">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="LineItem">
              <xs:annotation>
                <xs:documentation>Repeating element that contains an individual item</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:complexContent mixed="false">
                  <xs:extension base="BaseLineItem">
                    <xs:sequence>
                      <xs:element name="UnitCost" type="MonetaryAmount">
                        <xs:annotation>
                          <xs:documentation>The cost of purchasing one unit of the item represented by the UPC_EAN above.</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="UnitMSRP" type="MonetaryAmount">
                        <xs:annotation>
                          <xs:documentation>Optional: The manufacturer suggested retail price of the item represented by the UPC_EAN above.</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="UnitMAP" type="MonetaryAmount">
                        <xs:annotation>
                          <xs:documentation>Optional: The manufacturer minimum advertised price of the item represented by the UPC_EAN above.</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="PackagedWeight" type="Weight">
                        <xs:annotation>
                          <xs:documentation>Optional: The weight of the product in kilograms with all packaging.</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="ProductWeight" type="Weight">
                        <xs:annotation>
                          <xs:documentation>Optional: The  weight of the product in kilograms without packaging or in the configuration of its' intended use by the end user. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="ItemEffectiveDate" type="xs:date">
                        <xs:annotation>
                          <xs:documentation>Optional: The date that the retailer can start to order product from this catalog.  This date does not mean the available ship date.  Essentially the vendor systems need to be ready to accept a PO based on this catalog by the CatalogEffectiveDate.  This field overrides the global value defined in the header position of the catalog.  The intent is to provide a some flexibility, not to have a large discrepancy between the header time frames and the product time frames. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="ItemEndDate" type="xs:date">
                        <xs:annotation>
                          <xs:documentation>Optional: Represents the date that the retailer may no longer place a PO with the vendor for this product.  This field overrides the global value defined in the header position of the catalog.  The intent is to provide a some flexibility, not to have a large discrepancy between the header time frames and the product time frames. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="ItemAvailableToShipDate" type="xs:date">
                        <xs:annotation>
                          <xs:documentation>Optional: The date the product listed in the catalog will be available to ship.  This field overrides the global value defined in the header position of the catalog.  The intent is to provide a some flexibility, not to have a large discrepancy between the header time frames and the product time frames. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="TradeName" type="xs:token" />
                      <xs:element minOccurs="0" name="BrandName" type="xs:token">
                        <xs:annotation>
                          <xs:documentation>Optional: The brand name of the product.  Typically this brand name will be included on the product packaging.  Some companies manufacture multiple brands and need to be able to show what products belong to a particular brand. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="CountryOfOrigin" type="xs:token">
                        <xs:annotation>
                          <xs:documentation>Optional: The country of manufacture for the product.  Typically this would be the same as the 'Made in...' text provided on the labeling or packaging of the product. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="TariffCode" type="xs:token" />
                      <xs:element minOccurs="0" name="MinimumPurchaseQty" type="xs:integer">
                        <xs:annotation>
                          <xs:documentation>Optional: The minimum quantity that the retailer needs to but of this product (defined by the UPC_EAN) from the vendor. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="UPC_EANAvailableForPurchase" type="xs:boolean">
                        <xs:annotation>
                          <xs:documentation>Optional: This field helps in defining the relationship for an item and its' case/carton/pallet.  If this product should not be sold, this field should be false.  If it can be sold, the field is true or not present. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="BaseUnitOfMeasure" type="xs:token">
                        <xs:annotation>
                          <xs:documentation>Optional: In the case where an item can be ordered by the case, carton, etc.  This field designates what the lowest common denominator unit of measure is for the product.  For all the UPC/EANs for a given product, this field should contain the same UOM value. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="NumberOfBaseUnits" type="xs:integer">
                        <xs:annotation>
                          <xs:documentation>Optional: In the case where an item can be ordered by the case, carton, etc.  This field contains the number of BaseUnitOfMeasure units are represented by this UPC_EAN.  Ex/ if this UPC_EAN is for a carton that contains 24 energy bars and the energy bar is the base unit, this field should contain the number 24. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="BaseUnitUPC_EAN" type="UPC_EAN">
                        <xs:annotation>
                          <xs:documentation>Optional: In the case where an item can be ordered by the case, carton, etc. This field contains the UPC_EAN code for the base unit product.  </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="SellingUPC_EAN" type="UPC_EAN">
                        <xs:annotation>
                          <xs:documentation>Optional: If the product represented by UPC_EAN is a 'case' product that can be sold in smaller UOM's.  This field contains the UPC_EAN for the product that can be sold in smaller UOM's.  For example, an energy bar is often sold by the box.  The box can have a UPC_EAN code that is different from the individual energy bar packaging.  This field would contain the individual energy bar UPC_EAN if the current product record references the case of energy bars. </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="ExtendedInfo">
                        <xs:annotation>
                          <xs:documentation>Optional:  This section allows the vendor to supply enhanced information about the product.   This data can be crucial to providing timely and accurate representation of the vendor's product in print and online. </xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                          <xs:sequence>
                            <xs:element minOccurs="0" name="LongDescription" type="xs:token">
                              <xs:annotation>
                                <xs:documentation>Optional: Paragraph size description of the product. </xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="RGBColor">
                              <xs:annotation>
                                <xs:documentation>Optional: Standard representation of the basic or primary product color in red, green and blue hexadecimal format.  ex/ #000000 for black, #FFFFFF for white, #FF0000 for red, #00FF00 for green and #0000FF for blue.</xs:documentation>
                              </xs:annotation>
                              <xs:simpleType>
                                <xs:restriction base="xs:token">
                                  <xs:pattern value="#[0-9A-F]{6}" />
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:element>
                            <xs:element minOccurs="0" name="RGBColorDescription" type="xs:token">
                              <xs:annotation>
                                <xs:documentation>Optional: Description/name of the color represented by the RGBColor field. </xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="RGBColorSecondary">
                              <xs:annotation>
                                <xs:documentation>Optional: Standard representation of the secondary product color in red, green and blue hexadecimal format.  ex/ #000000 for black, #FFFFFF for white, #FF0000 for red, #00FF00 for green and #0000FF for blue.</xs:documentation>
                              </xs:annotation>
                              <xs:simpleType>
                                <xs:restriction base="xs:token">
                                  <xs:pattern value="#[0-9A-F]{6}" />
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:element>
                            <xs:element minOccurs="0" name="RGBColorSecondaryDescription" type="xs:token">
                              <xs:annotation>
                                <xs:documentation>Optional: Description/name of the color represented by the RGBColorSecondary field. </xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="ProductURI" type="xs:token">
                              <xs:annotation>
                                <xs:documentation>Optional: the URI of the product on the vendor's website.  The intent is to provide a reference for the retailer and/or the consumer that visits the retailer site and clicks through the vendor's site.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="PrintReadyImageURI" type="xs:token">
                              <xs:annotation>
                                <xs:documentation>Optional: The URI of a print ready image of the product.  This image should be of high quality and resolution that is appropriate for a full color, glossy ad. </xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="FeatureList">
                              <xs:annotation>
                                <xs:documentation>Optional: Unbounded list of product features.  The best example is a bulleted list found on web sites that complements the LongDescription of the product.  </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:sequence>
                                  <xs:element maxOccurs="unbounded" name="Feature" type="xs:token" />
                                </xs:sequence>
                              </xs:complexType>
                            </xs:element>
                            <xs:element minOccurs="0" name="SpecList">
                              <xs:annotation>
                                <xs:documentation>Optional: Unbounded list of product specifications.  Examples could include, dimensions, weight, strength, etc. </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:sequence>
                                  <xs:element maxOccurs="unbounded" name="Spec">
                                    <xs:complexType>
                                      <xs:sequence>
                                        <xs:element name="SpecName" type="xs:token">
                                          <xs:annotation>
                                            <xs:documentation>The name of the specification</xs:documentation>
                                          </xs:annotation>
                                        </xs:element>
                                        <xs:element name="SpecValue" type="xs:token">
                                          <xs:annotation>
                                            <xs:documentation>The value of the specification with units.</xs:documentation>
                                          </xs:annotation>
                                        </xs:element>
                                      </xs:sequence>
                                    </xs:complexType>
                                  </xs:element>
                                </xs:sequence>
                              </xs:complexType>
                            </xs:element>
                            <xs:element minOccurs="0" name="ImageList">
                              <xs:annotation>
                                <xs:documentation>Optional: Unbounded list of additional images that are associated with the product.  Might include images of the product from different angles, lifestyle shots or technical drawings. </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:sequence>
                                  <xs:element maxOccurs="unbounded" name="ImageInfo">
                                    <xs:complexType>
                                      <xs:sequence>
                                        <xs:element name="ImageDescription" type="xs:token" />
                                        <xs:element name="ImageURI" type="xs:token" />
                                      </xs:sequence>
                                    </xs:complexType>
                                  </xs:element>
                                </xs:sequence>
                              </xs:complexType>
                            </xs:element>
                            <xs:element minOccurs="0" name="CrossSellList">
                              <xs:annotation>
                                <xs:documentation>Optional: A list of UPC_EAN codes of products that would be a common cross sell for the current product.  This list should be short and only contain products that are relevant.  Ex/ a tent is the current product and the cross sell product is the footprint that matches the tent.</xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:sequence>
                                  <xs:element maxOccurs="unbounded" name="UPC_EAN" type="UPC_EAN" />
                                </xs:sequence>
                              </xs:complexType>
                            </xs:element>
                            <xs:element minOccurs="0" name="CategoryLevel1" type="xs:token">
                              <xs:annotation>
                                <xs:documentation>Optional: The CategoryLevel fields are an attempt to provide a method to separate or categorize products into separate groups.  For instance, separating the tents, sleeping bags and backpacks that are contained in the vendor's catalog.  The value of CategoryLevel should be human readable and easily interpreted.  CategoryLevel1 should represent the broadest groupings.  CategoryLevel2 should provide a bit more granularity.  Finally, CategoryLevel3 should provide the most granularity.  CategoryLevel1 should be used first, then 2 and finally 3.  The basic of the categories will can be visualized as a tree structure.  CategoryLevel2 and 3 names/values can repeat across higher level category values.   For example, two CategoryLevel1 values could be 'tents' and 'sleeping bags'.  Both the tents and sleeping bags categories could have a 'lightweight' level 2 category. </xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="CategoryLevel2" type="xs:token" />
                            <xs:element minOccurs="0" name="CategoryLevel3" type="xs:token" />
                          </xs:sequence>
                        </xs:complexType>
                      </xs:element>
                    </xs:sequence>
                  </xs:extension>
                </xs:complexContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AvailableToSellInquiry">
    <xs:annotation>
      <xs:documentation>Request sent to vendor asking for an Available to Sell document</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="OIAHeader" />
      <xs:element minOccurs="0" name="UPCList">
        <xs:annotation>
          <xs:documentation>Optional: If this element is included, the response should only return the UPC_EAN's included in the list. If this element is NOT included, the vendor should reply with the ATS for all their products.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="UPC_EAN" type="UPC_EAN" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="B2BiFault">
    <xs:annotation>
      <xs:documentation>Fault information that is added to the detail section of a SOAP fault.  Also used for sending fault information when not using web services for document transport.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ResponseCode" type="ResponseCode" />
      <xs:element name="ResponseText" type="ResponseText" />
      <xs:element minOccurs="0" name="ResponseComment" type="xs:token">
        <xs:annotation>
          <xs:documentation>Required if ResponseCode is greater than zero. Include field and/or area of failure.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="AttributesExtended" type="AttributesExtended" />
    </xs:sequence>
  </xs:complexType>
  <!-- WSDL Types -->
  <xs:element name="atsInquiry" type="AvailableToSellInquiry">
    <xs:annotation>
      <xs:documentation>Declared type for use in the WSDL</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="availableToSell" type="AvailableToSell">
    <xs:annotation>
      <xs:documentation>Declared type for use in the WSDL</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="catalogRequest" type="CatalogRequest">
    <xs:annotation>
      <xs:documentation>Declared type for use in the WSDL</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="catalog" type="Catalog">
    <xs:annotation>
      <xs:documentation>Declared type for use in the WSDL</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="catalogListRequest" type="CatalogListRequest">
    <xs:annotation>
      <xs:documentation>Declared type for use in the WSDL</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="catalogList" type="CatalogList">
    <xs:annotation>
      <xs:documentation>Declared type for use in the WSDL</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="documentReceipt" type="DocumentReceipt">
    <xs:annotation>
      <xs:documentation>Declared type for use in the WSDL</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="submitInvoice" type="Invoice">
    <xs:annotation>
      <xs:documentation>Declared type for use in the WSDL</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="submitPO" type="PO">
    <xs:annotation>
      <xs:documentation>Declared type for use in the WSDL</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="b2biFault" type="B2BiFault">
    <xs:annotation>
      <xs:documentation>Declared type for use in the WSDL</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:simpleType name="ResponseCode">
    <xs:restriction base="xs:integer">
      <xs:enumeration value="0" />
      <xs:enumeration value="1" />
      <xs:enumeration value="2" />
      <xs:enumeration value="3" />
      <xs:enumeration value="4" />
      <xs:enumeration value="5" />
      <xs:enumeration value="6" />
      <xs:enumeration value="7" />
      <xs:enumeration value="99" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ResponseText">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Contact Vendor" />
      <xs:enumeration value="Service Unavailable" />
      <xs:enumeration value="Authentication Failure" />
      <xs:enumeration value="Document Not Supported" />
      <xs:enumeration value="Schema Non-Validation" />
      <xs:enumeration value="Duplicate Document" />
      <xs:enumeration value="Missing or Incorrect Data" />
      <xs:enumeration value="Rule Violation" />
      <xs:enumeration value="Unknown" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
